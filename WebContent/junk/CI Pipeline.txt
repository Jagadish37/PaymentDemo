node {
   def mvnHome
        
    
    
   stage('Preparation') { // for display purposes
      // Get some code from a GitHub repository
    bNo= "${env.BUILD_NUMBER}"
    echo  "echoing the build number ${bNo}"
     
      checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url: '/d/Projects/Budapest/PaymentDemo']]])
   /*   git '/d/Projects/Budapest/PaymentDemo'*/
      // Get the Maven tool.
      // ** NOTE: This 'M3' Maven tool must be configured
      // **       in the global configuration.           
      mvnHome = tool 'M3'
      
   }
   stage('clean'){
       bat(/"${mvnHome}\bin\mvn" -Dmaven.test.failure.ignore clean/)
   }
   
  /* stage('Sonar Analysis'){
         withSonarQubeEnv('SonarQube UCI') {
          bat(/"${mvnHome}\bin\mvn" org.sonarsource.scanner.maven:sonar-maven-plugin:3.3.0.603:sonar/)
         }
   }*/
   stage('Build') {
      // Run the maven build
      if (isUnix()) {
         sh "'${mvnHome}/bin/mvn' -Dmaven.test.failure.ignore clean package"
      } else {
         bat(/"${mvnHome}\bin\mvn" -Dmaven.test.failure.ignore clean package/)
      }
   }
   stage('Unit TestCase Results') {
      junit '**/target/surefire-reports/TEST-*.xml'
      archive'target/*.jar'
   }
   
   
    stage('Nexus Artifcat Upload')
   {
     
      bat 'mvn deploy:deploy-file -DgeneratePom=false -DrepositoryId=localnexus -Durl=http://localhost:8081/repository/PaymentDemo/ -DpomFile=pom.xml -Dfile=target/PaymentDemo-0.1.war -Dversion=%BUILD_NUMBER%'
   }
   
   stage ('Call of CD Pipeline'){
       
       def pomname='PaymentDemo-'+bNo+'.pom'
       def warname='PaymentDemo-'+bNo+'.war'
       def nexusurl='http://localhost:8081/repository/PaymentDemo/PaymentDemo/PaymentDemo/'+bNo+'/'
     
       build job: 'PaymentPipeline-CD', parameters: [string(name: "Nexus_WAR_NAME", value: warname), string(name: 'nexusurl', value: nexusurl), string(name: 'localwar', value: warname), string(name: 'localpom', value: pomname)]
   }
   
  /* stage('Tomcat Deployment')
   {
      bat(/"${mvnHome}\bin\mvn"  tomcat7:deploy/)
   }
   
   stage('Jmeter Load Testing'){
        bat 'd:/apache-jmeter-3.1/bin/jmeter.bat -n -t d:/apache-jmeter-3.1/bin/PaymentDemo_loadTest.jmx -l PaymentLoadTests.jtl'
        step([$class: 'ArtifactArchiver', artifacts: '**//*.jtl'])
   }*/
}
